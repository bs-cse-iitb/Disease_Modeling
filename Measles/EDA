{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"11_YKTentC6GeOo6PDR5gKiuvzRqPUx_j","timestamp":1673575942978},{"file_id":"1ifIy7mxMXpJiIbBBZwg6v46MYbfm0NEx","timestamp":1673500591607},{"file_id":"1tR5sKrP70nwYxUpdf5kHmVRc9WhBDCvS","timestamp":1673463020523},{"file_id":"1WPIBOIgZOjQogJTU3S0Fv8wQM1KhKnqg","timestamp":1673435470370},{"file_id":"1dv6lV3e8asnxZCKXPLOOgYfQJhKkxH_t","timestamp":1673030298516},{"file_id":"1aj7c3ba9ifcCNPEDj2JFFbn3Y4F83tjV","timestamp":1673005006026}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Importing Libraries\n","\n"],"metadata":{"id":"2vkC_z82K-ZG"}},{"cell_type":"code","execution_count":1,"metadata":{"id":"caaauXp-BDZE","executionInfo":{"status":"ok","timestamp":1673680858168,"user_tz":-330,"elapsed":2487,"user":{"displayName":"Balbir Singh","userId":"00625916843693188546"}}},"outputs":[],"source":["import numpy as np \n","import pandas as pd \n","import matplotlib.pyplot as plt\n","import seaborn as sns \n","\n","\n","from sklearn.svm import SVC\n","from sklearn.metrics import accuracy_score\n","\n","\n","from sklearn import tree\n","from sklearn.metrics import classification_report\n","from xgboost import plot_tree\n","\n","from sklearn.model_selection import train_test_split\n","from sklearn.model_selection import GridSearchCV\n","\n","%matplotlib inline"]},{"cell_type":"markdown","source":["# Importing Dataset"],"metadata":{"id":"YJUfLUM54wTa"}},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"axMWjZC26B5-","executionInfo":{"status":"ok","timestamp":1673680885390,"user_tz":-330,"elapsed":27228,"user":{"displayName":"Balbir Singh","userId":"00625916843693188546"}},"outputId":"bf1c1a89-f78e-4ff7-cd61-f6a0d41a86b3"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["df22=pd.read_excel(\"/content/drive/MyDrive/Seminar/2022_data.xlsx\")"],"metadata":{"id":"2N19RNtYBOPd","executionInfo":{"status":"ok","timestamp":1673680894893,"user_tz":-330,"elapsed":9507,"user":{"displayName":"Balbir Singh","userId":"00625916843693188546"}}},"execution_count":3,"outputs":[]},{"cell_type":"markdown","source":["# Exploratory Data Analysis\n","\n","1. drop irrelevent features\n","2. droping duplicate features\n","2. dealing with not applicable values\n","3. character string data into numerical data\n","4. manage imbalance dataset\n","5. feature scaling methods"],"metadata":{"id":"DDXnVIhfMMbP"}},{"cell_type":"code","source":["print(df22.info())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rTnOMUmuLcTW","executionInfo":{"status":"ok","timestamp":1673680894893,"user_tz":-330,"elapsed":50,"user":{"displayName":"Balbir Singh","userId":"00625916843693188546"}},"outputId":"c707aad6-bf90-4c39-c676-b227af6616ec"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 1638 entries, 0 to 1637\n","Columns: 201 entries, Unit_Code to Reporting_District\n","dtypes: datetime64[ns](29), float64(99), int64(1), object(72)\n","memory usage: 2.5+ MB\n","None\n"]}]},{"cell_type":"code","source":["df22.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":490},"id":"BHnNOi9SM6hT","executionInfo":{"status":"ok","timestamp":1673680894893,"user_tz":-330,"elapsed":44,"user":{"displayName":"Balbir Singh","userId":"00625916843693188546"}},"outputId":"c952bceb-e030-4402-8aff-5a3f895fca0f"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    Unit_Code      CASE        Reporting District    Yr Case Number  \\\n","0  MH_BMC_043  SPORADIC  GR. MUMBAI,(MAHARASHTRA)  22.0         017   \n","1  MH_BMC_043  SPORADIC  GR. MUMBAI,(MAHARASHTRA)  22.0         018   \n","2  MH_BMC_043  SPORADIC  GR. MUMBAI,(MAHARASHTRA)  22.0         094   \n","3  MH_BMC_043  SPORADIC  GR. MUMBAI,(MAHARASHTRA)  22.0         108   \n","4  MH_BMC_043  SPORADIC  GR. MUMBAI,(MAHARASHTRA)  22.0         274   \n","\n","        EpidNumber If Case belongs to an outbreak Corresponding OB  \\\n","0  MRINDMHBMC22017                            NaN              NaN   \n","1  MRINDMHBMC22018                            NaN              NaN   \n","2  MRINDMHBMC22094                            NaN              NaN   \n","3  MRINDMHBMC22108                            NaN              NaN   \n","4  MRINDMHBMC22274                            NaN              NaN   \n","\n","   Corresponding Msl Date of notification  ... Newborn Status  \\\n","0                NaN           2022-01-22  ...            NaN   \n","1                NaN           2022-01-22  ...            NaN   \n","2                NaN           2022-03-20  ...            NaN   \n","3                NaN           2022-02-10  ...            NaN   \n","4                NaN           2022-07-18  ...            NaN   \n","\n","  Birth defect - Congenital heart defect Birth defect - Eye defect  \\\n","0                                    0.0                       0.0   \n","1                                    0.0                       0.0   \n","2                                    0.0                       0.0   \n","3                                    0.0                       0.0   \n","4                                    0.0                       0.0   \n","\n","  Birth defect - Hearing  defect Birth defect - Neurological deficit  \\\n","0                            0.0                                 0.0   \n","1                            0.0                                 0.0   \n","2                            0.0                                 0.0   \n","3                            0.0                                 0.0   \n","4                            0.0                                 0.0   \n","\n","  Birth defect - Endocrine deficit Birth defect - Other deficits  \\\n","0                              0.0                           0.0   \n","1                              0.0                           0.0   \n","2                              0.0                           0.0   \n","3                              0.0                           0.0   \n","4                              0.0                           0.0   \n","\n","                   Class Reporting_Block Reporting_District  \n","0                Discard             NaN         GR. MUMBAI  \n","1  Lab Confirmed Rubella             NaN         GR. MUMBAI  \n","2  Lab Confirmed Measles             NaN         GR. MUMBAI  \n","3  Clinically Compatible             NaN         GR. MUMBAI  \n","4                Discard             NaN         GR. MUMBAI  \n","\n","[5 rows x 201 columns]"],"text/html":["\n","  <div id=\"df-f9705a44-013a-420a-b721-2f1202cb7cbd\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unit_Code</th>\n","      <th>CASE</th>\n","      <th>Reporting District</th>\n","      <th>Yr</th>\n","      <th>Case Number</th>\n","      <th>EpidNumber</th>\n","      <th>If Case belongs to an outbreak</th>\n","      <th>Corresponding OB</th>\n","      <th>Corresponding Msl</th>\n","      <th>Date of notification</th>\n","      <th>...</th>\n","      <th>Newborn Status</th>\n","      <th>Birth defect - Congenital heart defect</th>\n","      <th>Birth defect - Eye defect</th>\n","      <th>Birth defect - Hearing  defect</th>\n","      <th>Birth defect - Neurological deficit</th>\n","      <th>Birth defect - Endocrine deficit</th>\n","      <th>Birth defect - Other deficits</th>\n","      <th>Class</th>\n","      <th>Reporting_Block</th>\n","      <th>Reporting_District</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>MH_BMC_043</td>\n","      <td>SPORADIC</td>\n","      <td>GR. MUMBAI,(MAHARASHTRA)</td>\n","      <td>22.0</td>\n","      <td>017</td>\n","      <td>MRINDMHBMC22017</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2022-01-22</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>Discard</td>\n","      <td>NaN</td>\n","      <td>GR. MUMBAI</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>MH_BMC_043</td>\n","      <td>SPORADIC</td>\n","      <td>GR. MUMBAI,(MAHARASHTRA)</td>\n","      <td>22.0</td>\n","      <td>018</td>\n","      <td>MRINDMHBMC22018</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2022-01-22</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>Lab Confirmed Rubella</td>\n","      <td>NaN</td>\n","      <td>GR. MUMBAI</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>MH_BMC_043</td>\n","      <td>SPORADIC</td>\n","      <td>GR. MUMBAI,(MAHARASHTRA)</td>\n","      <td>22.0</td>\n","      <td>094</td>\n","      <td>MRINDMHBMC22094</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2022-03-20</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>Lab Confirmed Measles</td>\n","      <td>NaN</td>\n","      <td>GR. MUMBAI</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>MH_BMC_043</td>\n","      <td>SPORADIC</td>\n","      <td>GR. MUMBAI,(MAHARASHTRA)</td>\n","      <td>22.0</td>\n","      <td>108</td>\n","      <td>MRINDMHBMC22108</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2022-02-10</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>Clinically Compatible</td>\n","      <td>NaN</td>\n","      <td>GR. MUMBAI</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>MH_BMC_043</td>\n","      <td>SPORADIC</td>\n","      <td>GR. MUMBAI,(MAHARASHTRA)</td>\n","      <td>22.0</td>\n","      <td>274</td>\n","      <td>MRINDMHBMC22274</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2022-07-18</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>Discard</td>\n","      <td>NaN</td>\n","      <td>GR. MUMBAI</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 201 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f9705a44-013a-420a-b721-2f1202cb7cbd')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f9705a44-013a-420a-b721-2f1202cb7cbd button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f9705a44-013a-420a-b721-2f1202cb7cbd');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["print(list(df22.columns))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4KOINGI5MpqQ","executionInfo":{"status":"ok","timestamp":1673680894894,"user_tz":-330,"elapsed":24,"user":{"displayName":"Balbir Singh","userId":"00625916843693188546"}},"outputId":"a1d9570c-f246-477f-bf33-b4c4b18a2e8f"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["['Unit_Code', 'CASE', 'Reporting District', 'Yr', 'Case Number', 'EpidNumber', 'If Case belongs to an outbreak', 'Corresponding OB', 'Corresponding Msl', 'Date of notification', 'Notified By', 'Date of Investigation', 'Investigated By', 'Date case verified', 'Verified By', 'Health Facility Type', 'Health Facility Category', 'Health Facility Setup', 'Patient Name', 'Date of birth', 'Age (years)', 'Age (months)', 'Total Age= year.months', 'Sex', 'Father Name', 'Mother Name', 'Father Occupation', 'Religion', 'Address', 'Village', 'HRA', 'Email ID', 'Block_Name', 'District_Name', 'State_Name', 'Setting', 'Migratory', 'If Migratory (specify)', 'If Migratory (Other)', 'Measles vaccine received', 'MCV-1', 'MCV-1 Type', 'Date of MCV-1 received', 'MCV-2', 'MCV-2 Type', 'Date of MCV-2 received', 'If MCV is missed in RI, reason', 'No. of Measles doses received through campaign (SIA)', 'Total MCV Doses', 'If campaign dose is missed, reason', 'Date of last dose of MCV (before rash onset)', 'Date of last dose of MCV (before blood collection)', 'Maculo Papular Rash', 'Date of Onset of Rash', 'Fever', 'Date of Onset of Fever', 'Cough', 'Coryza', 'Conjuctivitis', 'Enlarged lymph nodes', 'Joint Pain', 'Clinician suspects Measles', 'Clinician suspects  Rubella', 'Complications (Clinical History)', 'Diarrhea', 'Malnutrition', 'Encephalitis', 'ARI', 'Pneumonia', 'Ear problems', 'Eye Problems', 'Other', 'Received  Vitamin-A  2 doses ', 'Travel From Date -1', 'Travel To Date -1', 'Block Visited -1', 'District Visited -1', 'Travel From Date -2', 'Travel To Date -2', 'Block Visited -2', 'District Visited -2', 'Travel From Date -3', 'Travel To Date -3', 'Block Visited -3', 'District Visited -3', 'Travel From Date -4', 'Travel To Date -4', 'Block Visited -4', 'District Visited -4', 'Any Travel History', 'Cross Notified', 'Date of cross notification', 'Similar symptoms in other household contact(s)', 'If yes, No. of sick contacts', 'Similar symptoms in other neighbourhood / work / school contact(s)', 'If yes, No. of sick contacts.1', ' If any of the above contact is already lab confirmed, EPID No', 'Health seeking behaviour after rash onset - Confined ate home', 'Health seeking behaviour after rash onset - Contacted community health worker', 'Health seeking behaviour after rash onset - Contacted health facility', 'Contacted community workers / influencers -1', 'Category of community contacts -1', 'Date of  contact -1', 'Did they refer / report  the case to any facility -1', 'Action by DIO / SMO -1', 'Contacted community workers / influencers -2', 'Category of community contacts -2', 'Date of  contact -2', 'Did they refer / report  the case to any facility -2', 'Action by DIO / SMO -2', 'HF1', 'Date case visited -1', 'Already RU/informer -1', 'Did they report this case -1', 'Action taken by SMO / DIO -1', 'Date feedback given to health facility - 1', 'HF2', 'Date case visited -2', 'Already RU/informer -2', 'Did they report this case -2', 'Action taken by SMO / DIO -2', 'Date feedback given to health facility - 2', 'HF3', 'Date case visited -3', 'Already RU/informer -3', 'Did they report this case -3', 'Action taken by SMO / DIO -3', 'Date feedback given to health facility - 3', 'HF4', 'Date case visited -4', 'Already RU/informer -4', 'Did they report this case -4', 'Action taken by SMO / DIO -4', 'Date feedback given to health facility - 4', 'Provisional diagnosis', 'Sample Collected', 'If no sample collected, reason', 'Blood sample collected', 'Date of Blood collection', 'Date of Blood sent', 'Date of Blood received in lab', 'Date of Blood result', 'Blood condition', 'Measles Igm', 'Rubella Igm', 'Reason for Inadequate Blood sample', 'Throat swab sample collected', 'Date of Throat swab collection', 'Date of Throat swab sent', 'Date of Throat swab received in lab', 'Date o Throat swab result', 'Throat swab condition', 'Throat swab sample result', 'Nasopharyngeal swab sample collected', 'Date of Nasopharyngeal swab collection', 'Date of Nasopharyngeal swab sent', 'Date of Nasopharyngeal swab received in lab', 'Date of Nasopharyngeal swab result', 'Nasopharyngeal swab condition', 'Nasopharyngeal swab result', 'Urine sample collected', 'Date of Urine collection', 'Date of Urine sent', 'Date of Urine received in lab', 'Date of Urine result', 'Urine condition', 'Urine sample result', 'Reason for Inadequate Virology sample', 'ACS done', 'Date of ACS done', 'Number of suspected cases found', 'Date of feedback (Patient / Caregiver)', 'Date of feedback (Reporting Person / Institution)', 'Follow-up', 'Date of follow-up', 'Reason of Follow-up not done', 'Outcome', 'If died, Date of death', 'Type of complications (Follow-up)', 'Diarrhea.1', 'Pneumonia.1', 'Encephalitis.1', 'Ear infection', 'Eye complications', 'Skin complications', 'Co-morbid conditions', 'Others', 'Suspected CRS', 'If the suspected case is Pregnant', 'EDD follow-up', 'Date visit made to newborn from infected mother', 'Newborn Status', 'Birth defect - Congenital heart defect', 'Birth defect - Eye defect', 'Birth defect - Hearing  defect', 'Birth defect - Neurological deficit', 'Birth defect - Endocrine deficit', 'Birth defect - Other deficits', 'Class', 'Reporting_Block', 'Reporting_District']\n"]}]},{"cell_type":"code","source":["df22['Class'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bkMA9JpO0aqj","executionInfo":{"status":"ok","timestamp":1673680894894,"user_tz":-330,"elapsed":20,"user":{"displayName":"Balbir Singh","userId":"00625916843693188546"}},"outputId":"21898c46-8cb6-4405-afba-92ea5a1c4edf"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Discard                  691\n","Lab Confirmed Measles    483\n","Clinically Compatible    296\n","Lab Confirmed Rubella     44\n","Name: Class, dtype: int64"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["col_names = ['Date of notification','Health Facility Category','Health Facility Setup','Age (years)','Father Occupation','HRA','Village','Migratory','Maculo Papular Rash','Date of Onset of Rash','Date of Onset of Fever','Cross Notified','HF1','Did they report this case -1','Block_Name', 'Measles vaccine received', 'Cough', 'Coryza', 'Conjuctivitis', 'Already RU/informer -1','Measles Igm','Rubella Igm','Date of Throat swab collection', 'Date of Throat swab sent','Date of Throat swab received in lab','Date o Throat swab result','Date of ACS done','Religion','Health Facility Type','Total MCV Doses','Sex','Class']"],"metadata":{"id":"1LDW_F6hTDxO","executionInfo":{"status":"ok","timestamp":1673680894894,"user_tz":-330,"elapsed":17,"user":{"displayName":"Balbir Singh","userId":"00625916843693188546"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["len(col_names)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ByzDrVC7RSV2","executionInfo":{"status":"ok","timestamp":1673680894894,"user_tz":-330,"elapsed":17,"user":{"displayName":"Balbir Singh","userId":"00625916843693188546"}},"outputId":"3a347eb1-142c-4bf4-947a-2ef28e602994"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["32"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["# droping irelevent features\n","a=df22.filter(col_names)"],"metadata":{"id":"jTZpuM0PoqN_","executionInfo":{"status":"ok","timestamp":1673680894894,"user_tz":-330,"elapsed":16,"user":{"displayName":"Balbir Singh","userId":"00625916843693188546"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["a.columns = col_names"],"metadata":{"id":"24nX-A6QTpCO","executionInfo":{"status":"ok","timestamp":1673680894894,"user_tz":-330,"elapsed":16,"user":{"displayName":"Balbir Singh","userId":"00625916843693188546"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["# rename space in columne name with underscore\n","a.rename(columns = lambda x: x.replace(' ', '_'), inplace=True)"],"metadata":{"id":"GPQD1gkgTj51","executionInfo":{"status":"ok","timestamp":1673680894895,"user_tz":-330,"elapsed":17,"user":{"displayName":"Balbir Singh","userId":"00625916843693188546"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["a.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8sevsM9xidVK","executionInfo":{"status":"ok","timestamp":1673680894895,"user_tz":-330,"elapsed":16,"user":{"displayName":"Balbir Singh","userId":"00625916843693188546"}},"outputId":"03f7f99c-4713-4aff-c5f9-e26e8ee7052f"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1638, 32)"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":[" # drop duplicate features\n"," # here is no duplicate enteries\n"," a= a.drop_duplicates()"],"metadata":{"id":"xsPCMWZmTaBC","executionInfo":{"status":"ok","timestamp":1673680894895,"user_tz":-330,"elapsed":15,"user":{"displayName":"Balbir Singh","userId":"00625916843693188546"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","source":["a.shape"],"metadata":{"id":"ix-xoDbiRRTJ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1673680894895,"user_tz":-330,"elapsed":15,"user":{"displayName":"Balbir Singh","userId":"00625916843693188546"}},"outputId":"38426e32-7df6-472b-e1fd-42d8a228f847"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1638, 32)"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["# checking for not available (NA) values\n","a.isnull().sum().sum()"],"metadata":{"id":"QUyV_SvZ8D0D","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1673680894895,"user_tz":-330,"elapsed":14,"user":{"displayName":"Balbir Singh","userId":"00625916843693188546"}},"outputId":"9ce613a4-9411-4769-a6a1-94c6fc56013f"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["4203"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["# dealing with Not available value\n","a  = a.fillna(method = \"ffill\")\n","a  = a.fillna(method = \"bfill\")\n","a.isnull().sum().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tnhgyvReoXFL","executionInfo":{"status":"ok","timestamp":1673680894895,"user_tz":-330,"elapsed":13,"user":{"displayName":"Balbir Singh","userId":"00625916843693188546"}},"outputId":"46e7a244-9c4e-4fa6-88df-2d3e7f9c78e3"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["date = ['Date_of_notification','Date_of_Onset_of_Rash','Date_of_Onset_of_Fever','Date_of_Throat_swab_collection', 'Date_of_Throat_swab_sent','Date_of_Throat_swab_received_in_lab', 'Date_o_Throat_swab_result','Date_of_ACS_done']\n","date = ['Date_of_notification','Date_of_Onset_of_Rash','Date_of_Throat_swab_collection', 'Date_of_Throat_swab_sent','Date_of_Throat_swab_received_in_lab', 'Date_o_Throat_swab_result','Date_of_ACS_done']\n","a.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Hb-lW7YnfvJL","executionInfo":{"status":"ok","timestamp":1673680894896,"user_tz":-330,"elapsed":13,"user":{"displayName":"Balbir Singh","userId":"00625916843693188546"}},"outputId":"9bce59e8-bc81-43db-b7ef-79afa7380a5e"},"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1638, 32)"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["a = a.drop(['Date_of_Onset_of_Fever'],axis =1)"],"metadata":{"id":"WmsojXmcrN1V","executionInfo":{"status":"ok","timestamp":1673680894896,"user_tz":-330,"elapsed":12,"user":{"displayName":"Balbir Singh","userId":"00625916843693188546"}}},"execution_count":19,"outputs":[]},{"cell_type":"code","source":["a"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":713},"id":"4lMiAl2grNrW","executionInfo":{"status":"ok","timestamp":1673680894896,"user_tz":-330,"elapsed":11,"user":{"displayName":"Balbir Singh","userId":"00625916843693188546"}},"outputId":"bb63f044-2fd9-491a-c842-3e5ca374f4ef"},"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Date_of_notification Health_Facility_Category  Health_Facility_Setup  \\\n","0              2022-01-22                    Other                      1   \n","1              2022-01-22                    Other                      1   \n","2              2022-03-20                      VHP                      1   \n","3              2022-02-10                       LP                      1   \n","4              2022-07-18                       LP                      1   \n","...                   ...                      ...                    ...   \n","1633           2022-11-28                    Other                      1   \n","1634           2022-12-02                    Other                      2   \n","1635           2022-12-10                       LP                      1   \n","1636           2022-12-13                    Other                      1   \n","1637           2022-12-14                    Other                      1   \n","\n","      Age_(years)  Father_Occupation HRA                  Village Migratory  \\\n","0             0.0      HOUSE KEEPING   N                   COLABA         N   \n","1             1.0      HOUSE KEEPING   N                   COLABA         N   \n","2             3.0             LABOUR   N                     FORT         N   \n","3             3.0           BUISNESS   N                     FORT         Y   \n","4            11.0           PRINTING   N                     FORT         N   \n","...           ...                ...  ..                      ...       ...   \n","1633         12.0           BUSINESS   N  M T AGARWAL HEALTH POST         N   \n","1634          1.0             EXPIRD   N                   DDU HP         N   \n","1635          1.0         BANK AGENT   N                   MULUND         N   \n","1636          0.0        PATHALOGIST   N                   MULUND         N   \n","1637          3.0  RETAIL SHOP OWNER   N  M T AGARWAL HEALTH POST         N   \n","\n","     Maculo_Papular_Rash Date_of_Onset_of_Rash  ...  \\\n","0                      Y            2022-01-18  ...   \n","1                      Y            2022-01-18  ...   \n","2                      Y            2022-03-10  ...   \n","3                      Y            2022-02-07  ...   \n","4                      Y            2022-07-12  ...   \n","...                  ...                   ...  ...   \n","1633                   Y            2022-11-15  ...   \n","1634                   Y            2022-12-01  ...   \n","1635                   Y            2022-12-06  ...   \n","1636                   Y            2022-12-13  ...   \n","1637                   Y            2022-12-11  ...   \n","\n","     Date_of_Throat_swab_collection Date_of_Throat_swab_sent  \\\n","0                        2022-01-31               2022-01-31   \n","1                        2022-01-31               2022-01-31   \n","2                        2022-01-31               2022-01-31   \n","3                        2022-01-31               2022-01-31   \n","4                        2022-07-19               2022-07-19   \n","...                             ...                      ...   \n","1633                     2022-11-29               2022-11-30   \n","1634                     2022-12-03               2022-12-05   \n","1635                     2022-12-03               2022-12-05   \n","1636                     2022-12-13               2022-12-14   \n","1637                     2022-12-14               2022-12-15   \n","\n","     Date_of_Throat_swab_received_in_lab Date_o_Throat_swab_result  \\\n","0                             2022-01-31                2022-02-15   \n","1                             2022-01-31                2022-02-15   \n","2                             2022-01-31                2022-02-15   \n","3                             2022-01-31                2022-02-15   \n","4                             2022-07-19                2022-02-15   \n","...                                  ...                       ...   \n","1633                          2022-11-30                2022-12-03   \n","1634                          2022-12-05                2022-12-08   \n","1635                          2022-12-05                2022-12-08   \n","1636                          2022-12-14                2022-12-08   \n","1637                          2022-12-15                2022-12-08   \n","\n","     Date_of_ACS_done Religion Health_Facility_Type Total_MCV_Doses Sex  \\\n","0          2022-01-31        H                Other             2.0   F   \n","1          2022-01-31        H                Other             1.0   F   \n","2          2022-03-24        H                   RU             1.0   M   \n","3          2022-02-10        H                  INF             2.0   F   \n","4          2022-07-18        H                  INF             3.0   M   \n","...               ...      ...                  ...             ...  ..   \n","1633       2022-11-29        H                Other             2.0   M   \n","1634       2022-12-03        H                Other             1.0   M   \n","1635       2022-12-03        H                   RU             1.0   M   \n","1636       2022-12-13        H                Other             0.0   M   \n","1637       2022-12-14        H                   RU             2.0   M   \n","\n","                      Class  \n","0                   Discard  \n","1     Lab Confirmed Rubella  \n","2     Lab Confirmed Measles  \n","3     Clinically Compatible  \n","4                   Discard  \n","...                     ...  \n","1633                Discard  \n","1634  Lab Confirmed Rubella  \n","1635                Discard  \n","1636                Discard  \n","1637                Discard  \n","\n","[1638 rows x 31 columns]"],"text/html":["\n","  <div id=\"df-a18553d1-c125-4e24-b0bf-5da92d976bfa\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date_of_notification</th>\n","      <th>Health_Facility_Category</th>\n","      <th>Health_Facility_Setup</th>\n","      <th>Age_(years)</th>\n","      <th>Father_Occupation</th>\n","      <th>HRA</th>\n","      <th>Village</th>\n","      <th>Migratory</th>\n","      <th>Maculo_Papular_Rash</th>\n","      <th>Date_of_Onset_of_Rash</th>\n","      <th>...</th>\n","      <th>Date_of_Throat_swab_collection</th>\n","      <th>Date_of_Throat_swab_sent</th>\n","      <th>Date_of_Throat_swab_received_in_lab</th>\n","      <th>Date_o_Throat_swab_result</th>\n","      <th>Date_of_ACS_done</th>\n","      <th>Religion</th>\n","      <th>Health_Facility_Type</th>\n","      <th>Total_MCV_Doses</th>\n","      <th>Sex</th>\n","      <th>Class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2022-01-22</td>\n","      <td>Other</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>HOUSE KEEPING</td>\n","      <td>N</td>\n","      <td>COLABA</td>\n","      <td>N</td>\n","      <td>Y</td>\n","      <td>2022-01-18</td>\n","      <td>...</td>\n","      <td>2022-01-31</td>\n","      <td>2022-01-31</td>\n","      <td>2022-01-31</td>\n","      <td>2022-02-15</td>\n","      <td>2022-01-31</td>\n","      <td>H</td>\n","      <td>Other</td>\n","      <td>2.0</td>\n","      <td>F</td>\n","      <td>Discard</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2022-01-22</td>\n","      <td>Other</td>\n","      <td>1</td>\n","      <td>1.0</td>\n","      <td>HOUSE KEEPING</td>\n","      <td>N</td>\n","      <td>COLABA</td>\n","      <td>N</td>\n","      <td>Y</td>\n","      <td>2022-01-18</td>\n","      <td>...</td>\n","      <td>2022-01-31</td>\n","      <td>2022-01-31</td>\n","      <td>2022-01-31</td>\n","      <td>2022-02-15</td>\n","      <td>2022-01-31</td>\n","      <td>H</td>\n","      <td>Other</td>\n","      <td>1.0</td>\n","      <td>F</td>\n","      <td>Lab Confirmed Rubella</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2022-03-20</td>\n","      <td>VHP</td>\n","      <td>1</td>\n","      <td>3.0</td>\n","      <td>LABOUR</td>\n","      <td>N</td>\n","      <td>FORT</td>\n","      <td>N</td>\n","      <td>Y</td>\n","      <td>2022-03-10</td>\n","      <td>...</td>\n","      <td>2022-01-31</td>\n","      <td>2022-01-31</td>\n","      <td>2022-01-31</td>\n","      <td>2022-02-15</td>\n","      <td>2022-03-24</td>\n","      <td>H</td>\n","      <td>RU</td>\n","      <td>1.0</td>\n","      <td>M</td>\n","      <td>Lab Confirmed Measles</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2022-02-10</td>\n","      <td>LP</td>\n","      <td>1</td>\n","      <td>3.0</td>\n","      <td>BUISNESS</td>\n","      <td>N</td>\n","      <td>FORT</td>\n","      <td>Y</td>\n","      <td>Y</td>\n","      <td>2022-02-07</td>\n","      <td>...</td>\n","      <td>2022-01-31</td>\n","      <td>2022-01-31</td>\n","      <td>2022-01-31</td>\n","      <td>2022-02-15</td>\n","      <td>2022-02-10</td>\n","      <td>H</td>\n","      <td>INF</td>\n","      <td>2.0</td>\n","      <td>F</td>\n","      <td>Clinically Compatible</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2022-07-18</td>\n","      <td>LP</td>\n","      <td>1</td>\n","      <td>11.0</td>\n","      <td>PRINTING</td>\n","      <td>N</td>\n","      <td>FORT</td>\n","      <td>N</td>\n","      <td>Y</td>\n","      <td>2022-07-12</td>\n","      <td>...</td>\n","      <td>2022-07-19</td>\n","      <td>2022-07-19</td>\n","      <td>2022-07-19</td>\n","      <td>2022-02-15</td>\n","      <td>2022-07-18</td>\n","      <td>H</td>\n","      <td>INF</td>\n","      <td>3.0</td>\n","      <td>M</td>\n","      <td>Discard</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1633</th>\n","      <td>2022-11-28</td>\n","      <td>Other</td>\n","      <td>1</td>\n","      <td>12.0</td>\n","      <td>BUSINESS</td>\n","      <td>N</td>\n","      <td>M T AGARWAL HEALTH POST</td>\n","      <td>N</td>\n","      <td>Y</td>\n","      <td>2022-11-15</td>\n","      <td>...</td>\n","      <td>2022-11-29</td>\n","      <td>2022-11-30</td>\n","      <td>2022-11-30</td>\n","      <td>2022-12-03</td>\n","      <td>2022-11-29</td>\n","      <td>H</td>\n","      <td>Other</td>\n","      <td>2.0</td>\n","      <td>M</td>\n","      <td>Discard</td>\n","    </tr>\n","    <tr>\n","      <th>1634</th>\n","      <td>2022-12-02</td>\n","      <td>Other</td>\n","      <td>2</td>\n","      <td>1.0</td>\n","      <td>EXPIRD</td>\n","      <td>N</td>\n","      <td>DDU HP</td>\n","      <td>N</td>\n","      <td>Y</td>\n","      <td>2022-12-01</td>\n","      <td>...</td>\n","      <td>2022-12-03</td>\n","      <td>2022-12-05</td>\n","      <td>2022-12-05</td>\n","      <td>2022-12-08</td>\n","      <td>2022-12-03</td>\n","      <td>H</td>\n","      <td>Other</td>\n","      <td>1.0</td>\n","      <td>M</td>\n","      <td>Lab Confirmed Rubella</td>\n","    </tr>\n","    <tr>\n","      <th>1635</th>\n","      <td>2022-12-10</td>\n","      <td>LP</td>\n","      <td>1</td>\n","      <td>1.0</td>\n","      <td>BANK AGENT</td>\n","      <td>N</td>\n","      <td>MULUND</td>\n","      <td>N</td>\n","      <td>Y</td>\n","      <td>2022-12-06</td>\n","      <td>...</td>\n","      <td>2022-12-03</td>\n","      <td>2022-12-05</td>\n","      <td>2022-12-05</td>\n","      <td>2022-12-08</td>\n","      <td>2022-12-03</td>\n","      <td>H</td>\n","      <td>RU</td>\n","      <td>1.0</td>\n","      <td>M</td>\n","      <td>Discard</td>\n","    </tr>\n","    <tr>\n","      <th>1636</th>\n","      <td>2022-12-13</td>\n","      <td>Other</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>PATHALOGIST</td>\n","      <td>N</td>\n","      <td>MULUND</td>\n","      <td>N</td>\n","      <td>Y</td>\n","      <td>2022-12-13</td>\n","      <td>...</td>\n","      <td>2022-12-13</td>\n","      <td>2022-12-14</td>\n","      <td>2022-12-14</td>\n","      <td>2022-12-08</td>\n","      <td>2022-12-13</td>\n","      <td>H</td>\n","      <td>Other</td>\n","      <td>0.0</td>\n","      <td>M</td>\n","      <td>Discard</td>\n","    </tr>\n","    <tr>\n","      <th>1637</th>\n","      <td>2022-12-14</td>\n","      <td>Other</td>\n","      <td>1</td>\n","      <td>3.0</td>\n","      <td>RETAIL SHOP OWNER</td>\n","      <td>N</td>\n","      <td>M T AGARWAL HEALTH POST</td>\n","      <td>N</td>\n","      <td>Y</td>\n","      <td>2022-12-11</td>\n","      <td>...</td>\n","      <td>2022-12-14</td>\n","      <td>2022-12-15</td>\n","      <td>2022-12-15</td>\n","      <td>2022-12-08</td>\n","      <td>2022-12-14</td>\n","      <td>H</td>\n","      <td>RU</td>\n","      <td>2.0</td>\n","      <td>M</td>\n","      <td>Discard</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1638 rows × 31 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a18553d1-c125-4e24-b0bf-5da92d976bfa')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-a18553d1-c125-4e24-b0bf-5da92d976bfa button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-a18553d1-c125-4e24-b0bf-5da92d976bfa');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["a[date]=a[date].astype(int)\n","#a['Date_of_notification']=a['Date_of_notification'].dt.strftime(\"%Y%m%d\").astype(int)\n","#a['Date_of_Onset_of_Rash']=a['Date_of_Onset_of_Rash'].dt.strftime(\"%Y%m%d\").astype(int)\n","\n","a.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":422},"id":"PwUAXue-i5-N","executionInfo":{"status":"ok","timestamp":1673680895866,"user_tz":-330,"elapsed":981,"user":{"displayName":"Balbir Singh","userId":"00625916843693188546"}},"outputId":"2d926568-5f49-4a7e-d5df-d185494dbd14"},"execution_count":21,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-21-1e2cfe5500fe>:1: FutureWarning: casting datetime64[ns] values to int64 with .astype(...) is deprecated and will raise in a future version. Use .view(...) instead.\n","  a[date]=a[date].astype(int)\n"]},{"output_type":"execute_result","data":{"text/plain":["   Date_of_notification Health_Facility_Category  Health_Facility_Setup  \\\n","0   1642809600000000000                    Other                      1   \n","1   1642809600000000000                    Other                      1   \n","2   1647734400000000000                      VHP                      1   \n","3   1644451200000000000                       LP                      1   \n","4   1658102400000000000                       LP                      1   \n","\n","   Age_(years) Father_Occupation HRA Village Migratory Maculo_Papular_Rash  \\\n","0          0.0     HOUSE KEEPING   N  COLABA         N                   Y   \n","1          1.0     HOUSE KEEPING   N  COLABA         N                   Y   \n","2          3.0            LABOUR   N    FORT         N                   Y   \n","3          3.0          BUISNESS   N    FORT         Y                   Y   \n","4         11.0          PRINTING   N    FORT         N                   Y   \n","\n","   Date_of_Onset_of_Rash  ... Date_of_Throat_swab_collection  \\\n","0    1642464000000000000  ...            1643587200000000000   \n","1    1642464000000000000  ...            1643587200000000000   \n","2    1646870400000000000  ...            1643587200000000000   \n","3    1644192000000000000  ...            1643587200000000000   \n","4    1657584000000000000  ...            1658188800000000000   \n","\n","  Date_of_Throat_swab_sent Date_of_Throat_swab_received_in_lab  \\\n","0      1643587200000000000                 1643587200000000000   \n","1      1643587200000000000                 1643587200000000000   \n","2      1643587200000000000                 1643587200000000000   \n","3      1643587200000000000                 1643587200000000000   \n","4      1658188800000000000                 1658188800000000000   \n","\n","  Date_o_Throat_swab_result     Date_of_ACS_done Religion  \\\n","0       1644883200000000000  1643587200000000000        H   \n","1       1644883200000000000  1643587200000000000        H   \n","2       1644883200000000000  1648080000000000000        H   \n","3       1644883200000000000  1644451200000000000        H   \n","4       1644883200000000000  1658102400000000000        H   \n","\n","  Health_Facility_Type Total_MCV_Doses Sex                  Class  \n","0                Other             2.0   F                Discard  \n","1                Other             1.0   F  Lab Confirmed Rubella  \n","2                   RU             1.0   M  Lab Confirmed Measles  \n","3                  INF             2.0   F  Clinically Compatible  \n","4                  INF             3.0   M                Discard  \n","\n","[5 rows x 31 columns]"],"text/html":["\n","  <div id=\"df-94c8401b-2ad5-4e96-8a8f-879427109880\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date_of_notification</th>\n","      <th>Health_Facility_Category</th>\n","      <th>Health_Facility_Setup</th>\n","      <th>Age_(years)</th>\n","      <th>Father_Occupation</th>\n","      <th>HRA</th>\n","      <th>Village</th>\n","      <th>Migratory</th>\n","      <th>Maculo_Papular_Rash</th>\n","      <th>Date_of_Onset_of_Rash</th>\n","      <th>...</th>\n","      <th>Date_of_Throat_swab_collection</th>\n","      <th>Date_of_Throat_swab_sent</th>\n","      <th>Date_of_Throat_swab_received_in_lab</th>\n","      <th>Date_o_Throat_swab_result</th>\n","      <th>Date_of_ACS_done</th>\n","      <th>Religion</th>\n","      <th>Health_Facility_Type</th>\n","      <th>Total_MCV_Doses</th>\n","      <th>Sex</th>\n","      <th>Class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1642809600000000000</td>\n","      <td>Other</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>HOUSE KEEPING</td>\n","      <td>N</td>\n","      <td>COLABA</td>\n","      <td>N</td>\n","      <td>Y</td>\n","      <td>1642464000000000000</td>\n","      <td>...</td>\n","      <td>1643587200000000000</td>\n","      <td>1643587200000000000</td>\n","      <td>1643587200000000000</td>\n","      <td>1644883200000000000</td>\n","      <td>1643587200000000000</td>\n","      <td>H</td>\n","      <td>Other</td>\n","      <td>2.0</td>\n","      <td>F</td>\n","      <td>Discard</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1642809600000000000</td>\n","      <td>Other</td>\n","      <td>1</td>\n","      <td>1.0</td>\n","      <td>HOUSE KEEPING</td>\n","      <td>N</td>\n","      <td>COLABA</td>\n","      <td>N</td>\n","      <td>Y</td>\n","      <td>1642464000000000000</td>\n","      <td>...</td>\n","      <td>1643587200000000000</td>\n","      <td>1643587200000000000</td>\n","      <td>1643587200000000000</td>\n","      <td>1644883200000000000</td>\n","      <td>1643587200000000000</td>\n","      <td>H</td>\n","      <td>Other</td>\n","      <td>1.0</td>\n","      <td>F</td>\n","      <td>Lab Confirmed Rubella</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1647734400000000000</td>\n","      <td>VHP</td>\n","      <td>1</td>\n","      <td>3.0</td>\n","      <td>LABOUR</td>\n","      <td>N</td>\n","      <td>FORT</td>\n","      <td>N</td>\n","      <td>Y</td>\n","      <td>1646870400000000000</td>\n","      <td>...</td>\n","      <td>1643587200000000000</td>\n","      <td>1643587200000000000</td>\n","      <td>1643587200000000000</td>\n","      <td>1644883200000000000</td>\n","      <td>1648080000000000000</td>\n","      <td>H</td>\n","      <td>RU</td>\n","      <td>1.0</td>\n","      <td>M</td>\n","      <td>Lab Confirmed Measles</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1644451200000000000</td>\n","      <td>LP</td>\n","      <td>1</td>\n","      <td>3.0</td>\n","      <td>BUISNESS</td>\n","      <td>N</td>\n","      <td>FORT</td>\n","      <td>Y</td>\n","      <td>Y</td>\n","      <td>1644192000000000000</td>\n","      <td>...</td>\n","      <td>1643587200000000000</td>\n","      <td>1643587200000000000</td>\n","      <td>1643587200000000000</td>\n","      <td>1644883200000000000</td>\n","      <td>1644451200000000000</td>\n","      <td>H</td>\n","      <td>INF</td>\n","      <td>2.0</td>\n","      <td>F</td>\n","      <td>Clinically Compatible</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1658102400000000000</td>\n","      <td>LP</td>\n","      <td>1</td>\n","      <td>11.0</td>\n","      <td>PRINTING</td>\n","      <td>N</td>\n","      <td>FORT</td>\n","      <td>N</td>\n","      <td>Y</td>\n","      <td>1657584000000000000</td>\n","      <td>...</td>\n","      <td>1658188800000000000</td>\n","      <td>1658188800000000000</td>\n","      <td>1658188800000000000</td>\n","      <td>1644883200000000000</td>\n","      <td>1658102400000000000</td>\n","      <td>H</td>\n","      <td>INF</td>\n","      <td>3.0</td>\n","      <td>M</td>\n","      <td>Discard</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 31 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-94c8401b-2ad5-4e96-8a8f-879427109880')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-94c8401b-2ad5-4e96-8a8f-879427109880 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-94c8401b-2ad5-4e96-8a8f-879427109880');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":21}]},{"cell_type":"code","source":["a.to_csv(\"timestamp.csv\")"],"metadata":{"id":"HEWDS9VtfeBB","executionInfo":{"status":"ok","timestamp":1673680895866,"user_tz":-330,"elapsed":21,"user":{"displayName":"Balbir Singh","userId":"00625916843693188546"}}},"execution_count":22,"outputs":[]},{"cell_type":"code","source":["X = a.drop(['Class'], axis=1)\n","y = a['Class']"],"metadata":{"id":"Kye4kmRUTjA6","executionInfo":{"status":"ok","timestamp":1673680895866,"user_tz":-330,"elapsed":20,"user":{"displayName":"Balbir Singh","userId":"00625916843693188546"}}},"execution_count":23,"outputs":[]},{"cell_type":"code","source":["X.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RAKglxY6DJpf","executionInfo":{"status":"ok","timestamp":1673680895866,"user_tz":-330,"elapsed":20,"user":{"displayName":"Balbir Singh","userId":"00625916843693188546"}},"outputId":"a9401ae7-b2b6-4e09-ffec-0aa11384557d"},"execution_count":24,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1638, 30)"]},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["X.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"z-fZkokRX-46","executionInfo":{"status":"ok","timestamp":1673680895867,"user_tz":-330,"elapsed":17,"user":{"displayName":"Balbir Singh","userId":"00625916843693188546"}},"outputId":"394915d6-662a-4e80-a41d-6a480f913ab1"},"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['Date_of_notification', 'Health_Facility_Category',\n","       'Health_Facility_Setup', 'Age_(years)', 'Father_Occupation', 'HRA',\n","       'Village', 'Migratory', 'Maculo_Papular_Rash', 'Date_of_Onset_of_Rash',\n","       'Cross_Notified', 'HF1', 'Did_they_report_this_case_-1', 'Block_Name',\n","       'Measles_vaccine_received', 'Cough', 'Coryza', 'Conjuctivitis',\n","       'Already_RU/informer_-1', 'Measles_Igm', 'Rubella_Igm',\n","       'Date_of_Throat_swab_collection', 'Date_of_Throat_swab_sent',\n","       'Date_of_Throat_swab_received_in_lab', 'Date_o_Throat_swab_result',\n","       'Date_of_ACS_done', 'Religion', 'Health_Facility_Type',\n","       'Total_MCV_Doses', 'Sex'],\n","      dtype='object')"]},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["print(list(X.columns))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iawDZIPxDpX0","executionInfo":{"status":"ok","timestamp":1673680895867,"user_tz":-330,"elapsed":15,"user":{"displayName":"Balbir Singh","userId":"00625916843693188546"}},"outputId":"7cb51d92-2514-46ae-dda1-7952efee5aad"},"execution_count":26,"outputs":[{"output_type":"stream","name":"stdout","text":["['Date_of_notification', 'Health_Facility_Category', 'Health_Facility_Setup', 'Age_(years)', 'Father_Occupation', 'HRA', 'Village', 'Migratory', 'Maculo_Papular_Rash', 'Date_of_Onset_of_Rash', 'Cross_Notified', 'HF1', 'Did_they_report_this_case_-1', 'Block_Name', 'Measles_vaccine_received', 'Cough', 'Coryza', 'Conjuctivitis', 'Already_RU/informer_-1', 'Measles_Igm', 'Rubella_Igm', 'Date_of_Throat_swab_collection', 'Date_of_Throat_swab_sent', 'Date_of_Throat_swab_received_in_lab', 'Date_o_Throat_swab_result', 'Date_of_ACS_done', 'Religion', 'Health_Facility_Type', 'Total_MCV_Doses', 'Sex']\n"]}]},{"cell_type":"code","source":["# ONE HOT ENCODING\n","X = pd.get_dummies(X)"],"metadata":{"id":"O1QJP3GiBikd","executionInfo":{"status":"ok","timestamp":1673680895867,"user_tz":-330,"elapsed":13,"user":{"displayName":"Balbir Singh","userId":"00625916843693188546"}}},"execution_count":27,"outputs":[]},{"cell_type":"code","source":["column_names = X.columns"],"metadata":{"id":"7iG1p_PrDqN_","executionInfo":{"status":"ok","timestamp":1673680895867,"user_tz":-330,"elapsed":13,"user":{"displayName":"Balbir Singh","userId":"00625916843693188546"}}},"execution_count":28,"outputs":[]},{"cell_type":"code","source":["from imblearn.over_sampling import SMOTE\n","\n","smote = SMOTE()\n","\n","# fit predictor and target variable\n","X, y = smote.fit_resample(X.values, y.ravel())"],"metadata":{"id":"-CUiCb7wOzYi","executionInfo":{"status":"ok","timestamp":1673680895867,"user_tz":-330,"elapsed":12,"user":{"displayName":"Balbir Singh","userId":"00625916843693188546"}}},"execution_count":29,"outputs":[]},{"cell_type":"code","source":["X.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ea51jgVSiuHb","executionInfo":{"status":"ok","timestamp":1673680895868,"user_tz":-330,"elapsed":11,"user":{"displayName":"Balbir Singh","userId":"00625916843693188546"}},"outputId":"f46323b4-85cb-4048-e2e3-94633a075081"},"execution_count":30,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(2980, 1648)"]},"metadata":{},"execution_count":30}]},{"cell_type":"code","source":["X=pd.DataFrame(X,columns=column_names)"],"metadata":{"id":"y60Gv5oACkvX","executionInfo":{"status":"ok","timestamp":1673680895868,"user_tz":-330,"elapsed":9,"user":{"displayName":"Balbir Singh","userId":"00625916843693188546"}}},"execution_count":31,"outputs":[]},{"cell_type":"code","source":["y=pd.DataFrame(y,columns=['Class'])"],"metadata":{"id":"CqW2IMPBD-Tf","executionInfo":{"status":"ok","timestamp":1673680895868,"user_tz":-330,"elapsed":9,"user":{"displayName":"Balbir Singh","userId":"00625916843693188546"}}},"execution_count":32,"outputs":[]},{"cell_type":"code","source":["# Scaling Techniques\n","from sklearn.preprocessing import MaxAbsScaler\n","abs_scaler = MaxAbsScaler()\n","abs_scaler.fit(X)\n","scaled_data = abs_scaler.transform(X)\n","X = pd.DataFrame(scaled_data, columns = X.columns)"],"metadata":{"id":"aPRNMeLAu3y9","executionInfo":{"status":"ok","timestamp":1673680896560,"user_tz":-330,"elapsed":700,"user":{"displayName":"Balbir Singh","userId":"00625916843693188546"}}},"execution_count":33,"outputs":[]},{"cell_type":"code","source":["# final X\n","X.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"s9HlUtQj-1E6","executionInfo":{"status":"ok","timestamp":1673680896561,"user_tz":-330,"elapsed":16,"user":{"displayName":"Balbir Singh","userId":"00625916843693188546"}},"outputId":"f54a1780-6c8c-4e6f-96b0-e4de1f0f2c84"},"execution_count":34,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Date_of_notification  Health_Facility_Setup  Age_(years)  \\\n","0              0.983042                  0.125     0.000000   \n","1              0.983042                  0.125     0.015385   \n","2              0.985989                  0.125     0.046154   \n","3              0.984024                  0.125     0.046154   \n","4              0.992193                  0.125     0.169231   \n","\n","   Date_of_Onset_of_Rash  Date_of_Throat_swab_collection  \\\n","0               0.982937                        0.983507   \n","1               0.982937                        0.983507   \n","2               0.985574                        0.983507   \n","3               0.983971                        0.983507   \n","4               0.991986                        0.992245   \n","\n","   Date_of_Throat_swab_sent  Date_of_Throat_swab_received_in_lab  \\\n","0                  0.983457                             0.983457   \n","1                  0.983457                             0.983457   \n","2                  0.983457                             0.983457   \n","3                  0.983457                             0.983457   \n","4                  0.992194                             0.992194   \n","\n","   Date_o_Throat_swab_result  Date_of_ACS_done  Total_MCV_Doses  ...  \\\n","0                   0.984334          0.983457         0.666667  ...   \n","1                   0.984334          0.983457         0.333333  ...   \n","2                   0.984334          0.986145         0.333333  ...   \n","3                   0.984334          0.983974         0.666667  ...   \n","4                   0.984334          0.992142         1.000000  ...   \n","\n","   Rubella_Igm_Negative  Rubella_Igm_Positive  Religion_H  Religion_M  \\\n","0                   1.0                   0.0         1.0         0.0   \n","1                   0.0                   1.0         1.0         0.0   \n","2                   0.0                   1.0         1.0         0.0   \n","3                   0.0                   1.0         1.0         0.0   \n","4                   1.0                   0.0         1.0         0.0   \n","\n","   Religion_O  Health_Facility_Type_INF  Health_Facility_Type_Other  \\\n","0         0.0                       0.0                         1.0   \n","1         0.0                       0.0                         1.0   \n","2         0.0                       0.0                         0.0   \n","3         0.0                       1.0                         0.0   \n","4         0.0                       1.0                         0.0   \n","\n","   Health_Facility_Type_RU  Sex_F  Sex_M  \n","0                      0.0    1.0    0.0  \n","1                      0.0    1.0    0.0  \n","2                      1.0    0.0    1.0  \n","3                      0.0    1.0    0.0  \n","4                      0.0    0.0    1.0  \n","\n","[5 rows x 1648 columns]"],"text/html":["\n","  <div id=\"df-7b1ac4b4-6395-4b9e-a4f8-17c59223e0b8\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date_of_notification</th>\n","      <th>Health_Facility_Setup</th>\n","      <th>Age_(years)</th>\n","      <th>Date_of_Onset_of_Rash</th>\n","      <th>Date_of_Throat_swab_collection</th>\n","      <th>Date_of_Throat_swab_sent</th>\n","      <th>Date_of_Throat_swab_received_in_lab</th>\n","      <th>Date_o_Throat_swab_result</th>\n","      <th>Date_of_ACS_done</th>\n","      <th>Total_MCV_Doses</th>\n","      <th>...</th>\n","      <th>Rubella_Igm_Negative</th>\n","      <th>Rubella_Igm_Positive</th>\n","      <th>Religion_H</th>\n","      <th>Religion_M</th>\n","      <th>Religion_O</th>\n","      <th>Health_Facility_Type_INF</th>\n","      <th>Health_Facility_Type_Other</th>\n","      <th>Health_Facility_Type_RU</th>\n","      <th>Sex_F</th>\n","      <th>Sex_M</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.983042</td>\n","      <td>0.125</td>\n","      <td>0.000000</td>\n","      <td>0.982937</td>\n","      <td>0.983507</td>\n","      <td>0.983457</td>\n","      <td>0.983457</td>\n","      <td>0.984334</td>\n","      <td>0.983457</td>\n","      <td>0.666667</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.983042</td>\n","      <td>0.125</td>\n","      <td>0.015385</td>\n","      <td>0.982937</td>\n","      <td>0.983507</td>\n","      <td>0.983457</td>\n","      <td>0.983457</td>\n","      <td>0.984334</td>\n","      <td>0.983457</td>\n","      <td>0.333333</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.985989</td>\n","      <td>0.125</td>\n","      <td>0.046154</td>\n","      <td>0.985574</td>\n","      <td>0.983507</td>\n","      <td>0.983457</td>\n","      <td>0.983457</td>\n","      <td>0.984334</td>\n","      <td>0.986145</td>\n","      <td>0.333333</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.984024</td>\n","      <td>0.125</td>\n","      <td>0.046154</td>\n","      <td>0.983971</td>\n","      <td>0.983507</td>\n","      <td>0.983457</td>\n","      <td>0.983457</td>\n","      <td>0.984334</td>\n","      <td>0.983974</td>\n","      <td>0.666667</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.992193</td>\n","      <td>0.125</td>\n","      <td>0.169231</td>\n","      <td>0.991986</td>\n","      <td>0.992245</td>\n","      <td>0.992194</td>\n","      <td>0.992194</td>\n","      <td>0.984334</td>\n","      <td>0.992142</td>\n","      <td>1.000000</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 1648 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7b1ac4b4-6395-4b9e-a4f8-17c59223e0b8')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-7b1ac4b4-6395-4b9e-a4f8-17c59223e0b8 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-7b1ac4b4-6395-4b9e-a4f8-17c59223e0b8');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":34}]},{"cell_type":"code","source":["X.shape\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8P0PMwiYGIwa","executionInfo":{"status":"ok","timestamp":1673680896561,"user_tz":-330,"elapsed":13,"user":{"displayName":"Balbir Singh","userId":"00625916843693188546"}},"outputId":"1809c2be-6951-4bd9-9e0b-20c64918ad06"},"execution_count":35,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(2980, 1648)"]},"metadata":{},"execution_count":35}]},{"cell_type":"code","source":["X_train, X_test, y_train, y_test = train_test_split(X,y, train_size=0.70)"],"metadata":{"id":"NxB7P_poxOMy","executionInfo":{"status":"ok","timestamp":1673680896561,"user_tz":-330,"elapsed":8,"user":{"displayName":"Balbir Singh","userId":"00625916843693188546"}}},"execution_count":36,"outputs":[]},{"cell_type":"markdown","source":["# SVM"],"metadata":{"id":"thj0f-wY6Y7a"}},{"cell_type":"code","source":["def SVM(X_train, Y_train, X_test, Y_test, kernel = 'rbf'):\n","  clf = SVC(kernel='rbf', C=1000, gamma=1)\n","  clf.fit(X_train, Y_train)\n","  Y_pred = clf.predict(X_test)\n","  print(classification_report(Y_test, Y_pred))\n","  return clf"],"metadata":{"id":"Q1YS3CdExPId","executionInfo":{"status":"ok","timestamp":1673680896561,"user_tz":-330,"elapsed":8,"user":{"displayName":"Balbir Singh","userId":"00625916843693188546"}}},"execution_count":37,"outputs":[]},{"cell_type":"code","source":["def SVM(X_train, Y_train, X_test, Y_test, kernel = 'rbf', type = 2):\n","  #Linear\n","  if kernel=='linear':\n","    #parameters = {'C':[0.3, 0.6, 0.9, 3, 6, 9, 48, 99]}\n","    parameters = {'C':[0.1, 0.5, 1, 5, 10, 50, 100]}\n","    svc = SVC(kernel = 'linear')\n","  #Polynomial\n","  elif kernel=='poly':\n","    parameters = {'C':[0.1, 1, 3], 'degree':[2, 3, 4], 'gamma': [0.1, 1]}\n","    svc = SVC(kernel = 'poly')\n","  #RBF\n","  elif kernel=='rbf':\n","    parameters = {'C':[0.1, 0.5, 1, 5, 10, 50, 100], 'gamma': [0.1, 0.5, 1, 3, 6, 9]}\n","    svc = SVC(kernel = 'rbf')\n","  else:\n","    print(\"Invalid Kernel Value\")\n","\n","  clf = GridSearchCV(svc, parameters, cv=5)\n","  clf.fit(X_train, Y_train)\n","  Y_train_pred = clf.predict(X_train)\n","  Y_test_pred = clf.predict(X_test)\n","  test_score = accuracy_score(Y_test_pred, Y_test)\n","  train_score = accuracy_score(Y_train_pred, Y_train)\n","  print(\"Train Score: \", train_score)\n","  print(\"Test score: \", test_score)\n","  print(classification_report(Y_test, Y_test_pred))"],"metadata":{"id":"RuVMV1yrzNJ0","executionInfo":{"status":"ok","timestamp":1673680896562,"user_tz":-330,"elapsed":8,"user":{"displayName":"Balbir Singh","userId":"00625916843693188546"}}},"execution_count":38,"outputs":[]},{"cell_type":"code","source":["svm_model = SVM(X_train, y_train, X_test, y_test,type=1,kernel = 'linear')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-gYK4K8Ix49r","executionInfo":{"status":"ok","timestamp":1673680938775,"user_tz":-330,"elapsed":42221,"user":{"displayName":"Balbir Singh","userId":"00625916843693188546"}},"outputId":"493b128a-5c4e-4003-cfc6-afc152c14bd3"},"execution_count":39,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.8/dist-packages/sklearn/utils/validation.py:993: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  y = column_or_1d(y, warn=True)\n","/usr/local/lib/python3.8/dist-packages/sklearn/utils/validation.py:993: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  y = column_or_1d(y, warn=True)\n","/usr/local/lib/python3.8/dist-packages/sklearn/utils/validation.py:993: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  y = column_or_1d(y, warn=True)\n","/usr/local/lib/python3.8/dist-packages/sklearn/utils/validation.py:993: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  y = column_or_1d(y, warn=True)\n","/usr/local/lib/python3.8/dist-packages/sklearn/utils/validation.py:993: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  y = column_or_1d(y, warn=True)\n","/usr/local/lib/python3.8/dist-packages/sklearn/utils/validation.py:993: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  y = column_or_1d(y, warn=True)\n","/usr/local/lib/python3.8/dist-packages/sklearn/utils/validation.py:993: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  y = column_or_1d(y, warn=True)\n","/usr/local/lib/python3.8/dist-packages/sklearn/utils/validation.py:993: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  y = column_or_1d(y, warn=True)\n","/usr/local/lib/python3.8/dist-packages/sklearn/utils/validation.py:993: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  y = column_or_1d(y, warn=True)\n","/usr/local/lib/python3.8/dist-packages/sklearn/utils/validation.py:993: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  y = column_or_1d(y, warn=True)\n","/usr/local/lib/python3.8/dist-packages/sklearn/utils/validation.py:993: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  y = column_or_1d(y, warn=True)\n","/usr/local/lib/python3.8/dist-packages/sklearn/utils/validation.py:993: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  y = column_or_1d(y, warn=True)\n","/usr/local/lib/python3.8/dist-packages/sklearn/utils/validation.py:993: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  y = column_or_1d(y, warn=True)\n","/usr/local/lib/python3.8/dist-packages/sklearn/utils/validation.py:993: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  y = column_or_1d(y, warn=True)\n","/usr/local/lib/python3.8/dist-packages/sklearn/utils/validation.py:993: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  y = column_or_1d(y, warn=True)\n","/usr/local/lib/python3.8/dist-packages/sklearn/utils/validation.py:993: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  y = column_or_1d(y, warn=True)\n","/usr/local/lib/python3.8/dist-packages/sklearn/utils/validation.py:993: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  y = column_or_1d(y, warn=True)\n","/usr/local/lib/python3.8/dist-packages/sklearn/utils/validation.py:993: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  y = column_or_1d(y, warn=True)\n","/usr/local/lib/python3.8/dist-packages/sklearn/utils/validation.py:993: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  y = column_or_1d(y, warn=True)\n","/usr/local/lib/python3.8/dist-packages/sklearn/utils/validation.py:993: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  y = column_or_1d(y, warn=True)\n","/usr/local/lib/python3.8/dist-packages/sklearn/utils/validation.py:993: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  y = column_or_1d(y, warn=True)\n","/usr/local/lib/python3.8/dist-packages/sklearn/utils/validation.py:993: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  y = column_or_1d(y, warn=True)\n","/usr/local/lib/python3.8/dist-packages/sklearn/utils/validation.py:993: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  y = column_or_1d(y, warn=True)\n","/usr/local/lib/python3.8/dist-packages/sklearn/utils/validation.py:993: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  y = column_or_1d(y, warn=True)\n","/usr/local/lib/python3.8/dist-packages/sklearn/utils/validation.py:993: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  y = column_or_1d(y, warn=True)\n","/usr/local/lib/python3.8/dist-packages/sklearn/utils/validation.py:993: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  y = column_or_1d(y, warn=True)\n","/usr/local/lib/python3.8/dist-packages/sklearn/utils/validation.py:993: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  y = column_or_1d(y, warn=True)\n","/usr/local/lib/python3.8/dist-packages/sklearn/utils/validation.py:993: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  y = column_or_1d(y, warn=True)\n","/usr/local/lib/python3.8/dist-packages/sklearn/utils/validation.py:993: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  y = column_or_1d(y, warn=True)\n","/usr/local/lib/python3.8/dist-packages/sklearn/utils/validation.py:993: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  y = column_or_1d(y, warn=True)\n","/usr/local/lib/python3.8/dist-packages/sklearn/utils/validation.py:993: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  y = column_or_1d(y, warn=True)\n","/usr/local/lib/python3.8/dist-packages/sklearn/utils/validation.py:993: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  y = column_or_1d(y, warn=True)\n","/usr/local/lib/python3.8/dist-packages/sklearn/utils/validation.py:993: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  y = column_or_1d(y, warn=True)\n","/usr/local/lib/python3.8/dist-packages/sklearn/utils/validation.py:993: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  y = column_or_1d(y, warn=True)\n","/usr/local/lib/python3.8/dist-packages/sklearn/utils/validation.py:993: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  y = column_or_1d(y, warn=True)\n","/usr/local/lib/python3.8/dist-packages/sklearn/utils/validation.py:993: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  y = column_or_1d(y, warn=True)\n"]},{"output_type":"stream","name":"stdout","text":["Train Score:  0.9913710450623202\n","Test score:  0.8780760626398211\n","                       precision    recall  f1-score   support\n","\n","Clinically Compatible       0.74      0.90      0.81       231\n","              Discard       0.91      0.77      0.84       224\n","Lab Confirmed Measles       0.92      0.84      0.88       223\n","Lab Confirmed Rubella       0.99      1.00      1.00       216\n","\n","             accuracy                           0.88       894\n","            macro avg       0.89      0.88      0.88       894\n","         weighted avg       0.89      0.88      0.88       894\n","\n"]}]},{"cell_type":"markdown","source":["# Decision Tree"],"metadata":{"id":"SP7FXbDN6fsO"}},{"cell_type":"code","source":["from xgboost import XGBClassifier\n","from sklearn.model_selection import train_test_split\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.30)"],"metadata":{"id":"m-5Fb3bU4Pul","executionInfo":{"status":"ok","timestamp":1673680938776,"user_tz":-330,"elapsed":42,"user":{"displayName":"Balbir Singh","userId":"00625916843693188546"}}},"execution_count":40,"outputs":[]},{"cell_type":"code","source":["X_train.info()"],"metadata":{"id":"VBy-qxSaXH0c","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1673680938776,"user_tz":-330,"elapsed":40,"user":{"displayName":"Balbir Singh","userId":"00625916843693188546"}},"outputId":"798a4f35-e19d-464d-dd3c-8ce770d7eee7"},"execution_count":41,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 2086 entries, 2885 to 2728\n","Columns: 1648 entries, Date_of_notification to Sex_M\n","dtypes: float64(1648)\n","memory usage: 26.2 MB\n"]}]},{"cell_type":"code","source":["y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"Znjslr4fWNJO","executionInfo":{"status":"ok","timestamp":1673680938776,"user_tz":-330,"elapsed":37,"user":{"displayName":"Balbir Singh","userId":"00625916843693188546"}},"outputId":"14ff70ab-57db-4279-d536-c45e50989897"},"execution_count":42,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                      Class\n","0                   Discard\n","1     Lab Confirmed Rubella\n","2     Lab Confirmed Measles\n","3     Clinically Compatible\n","4                   Discard\n","...                     ...\n","2975  Lab Confirmed Rubella\n","2976  Lab Confirmed Rubella\n","2977  Lab Confirmed Rubella\n","2978  Lab Confirmed Rubella\n","2979  Lab Confirmed Rubella\n","\n","[2980 rows x 1 columns]"],"text/html":["\n","  <div id=\"df-e84864d8-27cb-4fdf-b755-73de85d0a696\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Discard</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Lab Confirmed Rubella</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Lab Confirmed Measles</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Clinically Compatible</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Discard</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2975</th>\n","      <td>Lab Confirmed Rubella</td>\n","    </tr>\n","    <tr>\n","      <th>2976</th>\n","      <td>Lab Confirmed Rubella</td>\n","    </tr>\n","    <tr>\n","      <th>2977</th>\n","      <td>Lab Confirmed Rubella</td>\n","    </tr>\n","    <tr>\n","      <th>2978</th>\n","      <td>Lab Confirmed Rubella</td>\n","    </tr>\n","    <tr>\n","      <th>2979</th>\n","      <td>Lab Confirmed Rubella</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2980 rows × 1 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e84864d8-27cb-4fdf-b755-73de85d0a696')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-e84864d8-27cb-4fdf-b755-73de85d0a696 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-e84864d8-27cb-4fdf-b755-73de85d0a696');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":42}]},{"cell_type":"code","source":["X_test.rename(columns = lambda x: x.replace(' ', '_'), inplace=True)"],"metadata":{"id":"LjMEk11ukqKQ","executionInfo":{"status":"ok","timestamp":1673680938776,"user_tz":-330,"elapsed":35,"user":{"displayName":"Balbir Singh","userId":"00625916843693188546"}}},"execution_count":43,"outputs":[]},{"cell_type":"code","source":["X_train.rename(columns = lambda x: x.replace(' ', '_'), inplace=True)"],"metadata":{"id":"r7L-zE1Sk525","executionInfo":{"status":"ok","timestamp":1673680938777,"user_tz":-330,"elapsed":36,"user":{"displayName":"Balbir Singh","userId":"00625916843693188546"}}},"execution_count":44,"outputs":[]},{"cell_type":"code","source":["X_train.columns = X_train.columns.str.translate(\"\".maketrans({\"[\":\"{\", \"]\":\"}\",\"<\":\"^\"}))\n","X.columns = X.columns.str.translate(\"\".maketrans({\"[\":\"{\", \"]\":\"}\",\"<\":\"^\"}))"],"metadata":{"id":"nKEh2SBvXWru","executionInfo":{"status":"ok","timestamp":1673680938777,"user_tz":-330,"elapsed":36,"user":{"displayName":"Balbir Singh","userId":"00625916843693188546"}}},"execution_count":45,"outputs":[]},{"cell_type":"code","source":["from sklearn.model_selection import GridSearchCV\n","from sklearn.model_selection import StratifiedKFold\n","model_XGB = XGBClassifier()\n","max_depth = range(1, 11, 2)\n","print(max_depth)\n","param_grid = dict(max_depth=max_depth)\n","kfold = StratifiedKFold(n_splits=10, shuffle=True, random_state=7)\n","grid_search = GridSearchCV(model_XGB, param_grid, scoring=\"neg_log_loss\", n_jobs=-1, cv=kfold, verbose=1)\n","grid_result = grid_search.fit(X, y)"],"metadata":{"id":"UxK4t2Pe4TyV","executionInfo":{"status":"ok","timestamp":1673682942496,"user_tz":-330,"elapsed":2003754,"user":{"displayName":"Balbir Singh","userId":"00625916843693188546"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"0ab36e44-a565-4f3a-a5b9-fa1f03ec8da8"},"execution_count":46,"outputs":[{"output_type":"stream","name":"stdout","text":["range(1, 11, 2)\n","Fitting 10 folds for each of 5 candidates, totalling 50 fits\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.8/dist-packages/sklearn/preprocessing/_label.py:98: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  y = column_or_1d(y, warn=True)\n","/usr/local/lib/python3.8/dist-packages/sklearn/preprocessing/_label.py:133: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  y = column_or_1d(y, warn=True)\n"]}]},{"cell_type":"code","source":["X_test.columns = X_test.columns.str.translate(\"\".maketrans({\"[\":\"{\", \"]\":\"}\",\"<\":\"^\"}))"],"metadata":{"id":"z_BGPHgffaNR","executionInfo":{"status":"ok","timestamp":1673682942497,"user_tz":-330,"elapsed":24,"user":{"displayName":"Balbir Singh","userId":"00625916843693188546"}}},"execution_count":47,"outputs":[]},{"cell_type":"code","source":["model_XGB.fit(X_train, y_train)\n","predictions = model_XGB.predict(X_test)"],"metadata":{"id":"MSk_9F2VuIVw","executionInfo":{"status":"ok","timestamp":1673682969943,"user_tz":-330,"elapsed":27468,"user":{"displayName":"Balbir Singh","userId":"00625916843693188546"}}},"execution_count":48,"outputs":[]},{"cell_type":"code","source":["print(classification_report(y_test, predictions))"],"metadata":{"id":"bf82bGSCzeXk","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1673682969944,"user_tz":-330,"elapsed":26,"user":{"displayName":"Balbir Singh","userId":"00625916843693188546"}},"outputId":"d661470b-2302-4d4c-fe71-92e11bb1a1d5"},"execution_count":49,"outputs":[{"output_type":"stream","name":"stdout","text":["                       precision    recall  f1-score   support\n","\n","Clinically Compatible       0.86      0.65      0.74       234\n","              Discard       0.78      0.94      0.85       227\n","Lab Confirmed Measles       0.86      0.90      0.88       209\n","Lab Confirmed Rubella       0.99      1.00      1.00       224\n","\n","             accuracy                           0.87       894\n","            macro avg       0.87      0.87      0.87       894\n","         weighted avg       0.87      0.87      0.87       894\n","\n"]}]},{"cell_type":"code","source":["fig, ax = plt.subplots(figsize=(30, 30))\n","class_names = ['Discard', 'Lab Confirmed Measles', 'Lab Confirmed Rubella',\n","       'Clinically Compatible']\n","plot_tree(model_XGB, ax=ax)\n","plt.show()"],"metadata":{"id":"R6B327Yb1Pil","colab":{"base_uri":"https://localhost:8080/","height":293},"executionInfo":{"status":"ok","timestamp":1673682971717,"user_tz":-330,"elapsed":1795,"user":{"displayName":"Balbir Singh","userId":"00625916843693188546"}},"outputId":"b453b1ae-fa13-43e7-e098-fbf7ec0d4e9b"},"execution_count":50,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 2160x2160 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["for i in range(31):\n","  print(str(i) + ' ' + str(a.columns[i]))"],"metadata":{"id":"aPyagTJhbGIo","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1673682971718,"user_tz":-330,"elapsed":16,"user":{"displayName":"Balbir Singh","userId":"00625916843693188546"}},"outputId":"eaf10183-2d1c-4a5c-9802-7c61c38ae461"},"execution_count":51,"outputs":[{"output_type":"stream","name":"stdout","text":["0 Date_of_notification\n","1 Health_Facility_Category\n","2 Health_Facility_Setup\n","3 Age_(years)\n","4 Father_Occupation\n","5 HRA\n","6 Village\n","7 Migratory\n","8 Maculo_Papular_Rash\n","9 Date_of_Onset_of_Rash\n","10 Cross_Notified\n","11 HF1\n","12 Did_they_report_this_case_-1\n","13 Block_Name\n","14 Measles_vaccine_received\n","15 Cough\n","16 Coryza\n","17 Conjuctivitis\n","18 Already_RU/informer_-1\n","19 Measles_Igm\n","20 Rubella_Igm\n","21 Date_of_Throat_swab_collection\n","22 Date_of_Throat_swab_sent\n","23 Date_of_Throat_swab_received_in_lab\n","24 Date_o_Throat_swab_result\n","25 Date_of_ACS_done\n","26 Religion\n","27 Health_Facility_Type\n","28 Total_MCV_Doses\n","29 Sex\n","30 Class\n"]}]}]}